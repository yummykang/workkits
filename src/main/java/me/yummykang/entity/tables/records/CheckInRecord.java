/*
 * This file is generated by jOOQ.
*/
package me.yummykang.entity.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import me.yummykang.entity.tables.CheckIn;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CheckInRecord extends UpdatableRecordImpl<CheckInRecord> implements Record4<Integer, Date, Date, Integer> {

    private static final long serialVersionUID = -1262082084;

    /**
     * Setter for <code>workkits.check_in.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>workkits.check_in.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>workkits.check_in.check_in_time</code>.
     */
    public void setCheckInTime(Date value) {
        set(1, value);
    }

    /**
     * Getter for <code>workkits.check_in.check_in_time</code>.
     */
    public Date getCheckInTime() {
        return (Date) get(1);
    }

    /**
     * Setter for <code>workkits.check_in.check_out_time</code>.
     */
    public void setCheckOutTime(Date value) {
        set(2, value);
    }

    /**
     * Getter for <code>workkits.check_in.check_out_time</code>.
     */
    public Date getCheckOutTime() {
        return (Date) get(2);
    }

    /**
     * Setter for <code>workkits.check_in.left_time</code>.
     */
    public void setLeftTime(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>workkits.check_in.left_time</code>.
     */
    public Integer getLeftTime() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Date, Date, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Date, Date, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return CheckIn.CHECK_IN.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field2() {
        return CheckIn.CHECK_IN.CHECK_IN_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field3() {
        return CheckIn.CHECK_IN.CHECK_OUT_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return CheckIn.CHECK_IN.LEFT_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value2() {
        return getCheckInTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value3() {
        return getCheckOutTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getLeftTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckInRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckInRecord value2(Date value) {
        setCheckInTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckInRecord value3(Date value) {
        setCheckOutTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckInRecord value4(Integer value) {
        setLeftTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckInRecord values(Integer value1, Date value2, Date value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CheckInRecord
     */
    public CheckInRecord() {
        super(CheckIn.CHECK_IN);
    }

    /**
     * Create a detached, initialised CheckInRecord
     */
    public CheckInRecord(Integer id, Date checkInTime, Date checkOutTime, Integer leftTime) {
        super(CheckIn.CHECK_IN);

        set(0, id);
        set(1, checkInTime);
        set(2, checkOutTime);
        set(3, leftTime);
    }
}
