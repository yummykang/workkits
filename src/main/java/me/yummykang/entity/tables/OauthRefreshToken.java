/*
 * This file is generated by jOOQ.
*/
package me.yummykang.entity.tables;


import javax.annotation.Generated;

import me.yummykang.entity.Workkits;
import me.yummykang.entity.tables.records.OauthRefreshTokenRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OauthRefreshToken extends TableImpl<OauthRefreshTokenRecord> {

    private static final long serialVersionUID = -385582348;

    /**
     * The reference instance of <code>workkits.oauth_refresh_token</code>
     */
    public static final OauthRefreshToken OAUTH_REFRESH_TOKEN = new OauthRefreshToken();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OauthRefreshTokenRecord> getRecordType() {
        return OauthRefreshTokenRecord.class;
    }

    /**
     * The column <code>workkits.oauth_refresh_token.token_id</code>.
     */
    public final TableField<OauthRefreshTokenRecord, String> TOKEN_ID = createField("token_id", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>workkits.oauth_refresh_token.token</code>.
     */
    public final TableField<OauthRefreshTokenRecord, byte[]> TOKEN = createField("token", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * The column <code>workkits.oauth_refresh_token.authentication</code>.
     */
    public final TableField<OauthRefreshTokenRecord, byte[]> AUTHENTICATION = createField("authentication", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * Create a <code>workkits.oauth_refresh_token</code> table reference
     */
    public OauthRefreshToken() {
        this("oauth_refresh_token", null);
    }

    /**
     * Create an aliased <code>workkits.oauth_refresh_token</code> table reference
     */
    public OauthRefreshToken(String alias) {
        this(alias, OAUTH_REFRESH_TOKEN);
    }

    private OauthRefreshToken(String alias, Table<OauthRefreshTokenRecord> aliased) {
        this(alias, aliased, null);
    }

    private OauthRefreshToken(String alias, Table<OauthRefreshTokenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Workkits.WORKKITS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OauthRefreshToken as(String alias) {
        return new OauthRefreshToken(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OauthRefreshToken rename(String name) {
        return new OauthRefreshToken(name, null);
    }
}
